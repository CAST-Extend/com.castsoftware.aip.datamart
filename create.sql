----------------
-- DIMENSION TABLES
----------------
DROP TABLE IF EXISTS :schema.DIM_QUALITY_STANDARDS CASCADE;
CREATE TABLE :schema.DIM_QUALITY_STANDARDS
(
  METRIC_ID INT,
  RULE_NAME TEXT,
  AIP_TOP_PRIORITY_RULE  BOOLEAN,
  CWE BOOLEAN,
  OMG BOOLEAN,
  OMG_SECURITY BOOLEAN,
  OMG_PERFORMANCE_EFFICIENCY BOOLEAN,
  OMG_MAINTAINABILITY BOOLEAN,
  OMG_RELIABILITY BOOLEAN,
  OWASP_2017_TOP10 BOOLEAN,
  OWASP_MOBILE_2016_TOP10 BOOLEAN,
  CONSTRAINT DIM_QUALITY_STANDARDS_PKEY PRIMARY KEY (METRIC_ID)
);

DROP TABLE IF EXISTS :schema.DIM_SNAPSHOTS CASCADE;
CREATE TABLE :schema.DIM_SNAPSHOTS
(
  SNAPSHOT_ID INT NOT NULL,
  APPLICATION_NAME TEXT,
  DATE TIMESTAMP WITHOUT TIME ZONE,
  IS_LATEST BOOLEAN,  
  YEAR INTEGER,
  YEAR_QUARTER TEXT,
  YEAR_MONTH TEXT,
  YEAR_WEEK TEXT,
  CONSOLIDATION_SETTINGS TEXT,
  LABEL TEXT,
  CONSTRAINT DIM_SNAPSHOTS_PKEY PRIMARY KEY (SNAPSHOT_ID)
);

DROP TABLE IF EXISTS :schema.DIM_RULES CASCADE;
CREATE TABLE :schema.DIM_RULES
(
  RULE_ID TEXT,
  RULE_NAME TEXT,
  TECHNICAL_CRITERION_NAME TEXT,  
  IS_CRITICAL BOOLEAN,
  WEIGHT DOUBLE PRECISION,
  WEIGHT_ARCHITECTURAL_DESIGN DOUBLE PRECISION,
  WEIGHT_CHANGEABILITY DOUBLE PRECISION,
  WEIGHT_DOCUMENTATION DOUBLE PRECISION,
  WEIGHT_EFFICIENCY DOUBLE PRECISION,
  WEIGHT_MAINTAINABILITY DOUBLE PRECISION,
  WEIGHT_PROGRAMMING_PRACTICES DOUBLE PRECISION,
  WEIGHT_ROBUSTNESS DOUBLE PRECISION,  
  WEIGHT_SECURITY DOUBLE PRECISION,
  WEIGHT_TOTAL_QUALITY_INDEX DOUBLE PRECISION,
  WEIGHT_TRANSFERABILITY DOUBLE PRECISION,
  CONSTRAINT DIM_RULES_PKEY PRIMARY KEY (RULE_ID)
);

----------------
-- APPLICATIONS MEASURES TABLES
----------------
  
DROP TABLE IF EXISTS :schema.APP_VIOLATIONS_MEASURES CASCADE;
CREATE TABLE :schema.APP_VIOLATIONS_MEASURES
(
  SNAPSHOT_ID INT,
  RULE_ID TEXT,
  TECHNOLOGY TEXT,  
  METRIC_ID INT,
  NB_VIOLATIONS INT,
  NB_TOTAL_CHECKS INT,
  VIOLATION_RATIO DOUBLE PRECISION,
  COMPLIANCE_RATIO DOUBLE PRECISION,
  CONSTRAINT APP_VIOLATIONS_MEASURES_PKEY PRIMARY KEY (SNAPSHOT_ID, RULE_ID, TECHNOLOGY),
  FOREIGN KEY (RULE_ID) REFERENCES :schema.DIM_RULES (RULE_ID),
  FOREIGN KEY (SNAPSHOT_ID) REFERENCES :schema.DIM_SNAPSHOTS(SNAPSHOT_ID),
  FOREIGN KEY (METRIC_ID) REFERENCES :schema.DIM_QUALITY_STANDARDS(METRIC_ID)  
);

DROP TABLE IF EXISTS :schema.APP_TECHNICAL_SIZING_MEASURES CASCADE;
CREATE TABLE :schema.APP_TECHNICAL_SIZING_MEASURES
(
    SNAPSHOT_ID INT,
    TECHNOLOGY TEXT,
    NB_ARTIFACTS INT,
    NB_CODE_LINES INT,
    NB_COMMENT_LINES INT,
    NB_COMMENTED_OUT_CODE_LINES INT,
    NB_DECISION_POINTS INT,
    NB_FILES INT,
    NB_TABLES INT,
    CONSTRAINT APP_TECHNICAL_SIZING_MEASURES_PKEY PRIMARY KEY (SNAPSHOT_ID, TECHNOLOGY),
    FOREIGN KEY (SNAPSHOT_ID) REFERENCES :schema.DIM_SNAPSHOTS(SNAPSHOT_ID)
);

DROP TABLE IF EXISTS :schema.APP_FUNCTIONAL_SIZING_MEASURES CASCADE;
CREATE TABLE :schema.APP_FUNCTIONAL_SIZING_MEASURES
(
    SNAPSHOT_ID INT,
    NB_DATA_FUNCTIONS_POINTS INT,
    NB_TOTAL_POINTS INT,
    NB_TRANSACTIONAL_FUNCTIONS_POINTS INT,
    NB_TRANSACTIONS INT,
    CONSTRAINT APP_FUNCTIONAL_SIZING_MEASURES_PKEY PRIMARY KEY (SNAPSHOT_ID),
    FOREIGN KEY (SNAPSHOT_ID) REFERENCES :schema.DIM_SNAPSHOTS(SNAPSHOT_ID)
);

DROP TABLE IF EXISTS :schema.APP_TECHNICAL_DEBT_MEASURES CASCADE;
CREATE TABLE :schema.APP_TECHNICAL_DEBT_MEASURES
(
    SNAPSHOT_ID INT,
    TECHNICAL_DEBT_DENSITY DOUBLE PRECISION,
    TECHNICAL_DEBT_TOTAL DOUBLE PRECISION,
    CONSTRAINT APP_TECHNICAL_DEBT_MEASURES_PKEY PRIMARY KEY (SNAPSHOT_ID),
    FOREIGN KEY (SNAPSHOT_ID) REFERENCES :schema.DIM_SNAPSHOTS(SNAPSHOT_ID)    
);

DROP TABLE IF EXISTS :schema.APP_HEALTH_MEASURES CASCADE;
CREATE TABLE :schema.APP_HEALTH_MEASURES
(
    SNAPSHOT_ID INT,
    BUSINESS_CRITERION_NAME TEXT,
    IS_HEALTH_FACTOR BOOLEAN,
    NB_CRITICAL_VIOLATIONS INT,
    NB_VIOLATIONS INT,
    SCORE DOUBLE PRECISION,
    CONSTRAINT APP_HEALTH_MEASURES_PKEY PRIMARY KEY (SNAPSHOT_ID, BUSINESS_CRITERION_NAME),
    FOREIGN KEY (SNAPSHOT_ID) REFERENCES :schema.DIM_SNAPSHOTS(SNAPSHOT_ID)        
);

-----
-- APPLICATIONS EVOLUTIONS TABLES
-----

DROP TABLE IF EXISTS :schema.APP_TECHNICAL_DEBT_EVOLUTION CASCADE;
CREATE TABLE :schema.APP_TECHNICAL_DEBT_EVOLUTION
(
    SNAPSHOT_ID INT,
    PREVIOUS_SNAPSHOT_ID INT,
    TECHNICAL_DEBT_ADDED DOUBLE PRECISION,
    TECHNICAL_DEBT_DELETED DOUBLE PRECISION,
    CONSTRAINT APP_TECHNICAL_DEBT_EVOLUTION_PKEY PRIMARY KEY (SNAPSHOT_ID),
    FOREIGN KEY (SNAPSHOT_ID) REFERENCES :schema.DIM_SNAPSHOTS(SNAPSHOT_ID),
    FOREIGN KEY (PREVIOUS_SNAPSHOT_ID) REFERENCES :schema.DIM_SNAPSHOTS(SNAPSHOT_ID)
);

DROP TABLE IF EXISTS :schema.APP_FUNCTIONAL_SIZING_EVOLUTION CASCADE;
CREATE TABLE :schema.APP_FUNCTIONAL_SIZING_EVOLUTION
(
    SNAPSHOT_ID INT,
    PREVIOUS_SNAPSHOT_ID INT,
    NB_AEFP_DATA_FUNCTION_POINTS INT,
    NB_AEFP_IMPLEMENTATION_POINTS INT,
    NB_AEFP_TOTAL_POINTS INT,
    NB_AEFP_TRANSACTIONAL_FUNCTION_POINTS INT,
    NB_AEP_POINTS_ADDED_FUNCTIONS INT,
    NB_AEP_POINTS_MODIFIED_FUNCTIONS INT,
    NB_AEP_POINTS_REMOVED_FUNCTIONS INT,
    NB_AEP_TOTAL_POINTS INT,
    NB_AETP_IMPLEMENTATION_POINTS INT,
    NB_AETP_TOTAL_POINTS INT,
    CONSTRAINT APP_FUNCTIONAL_SIZING_EVOLUTION_PKEY PRIMARY KEY (SNAPSHOT_ID),
    FOREIGN KEY (SNAPSHOT_ID) REFERENCES :schema.DIM_SNAPSHOTS(SNAPSHOT_ID),
    FOREIGN KEY (PREVIOUS_SNAPSHOT_ID) REFERENCES :schema.DIM_SNAPSHOTS(SNAPSHOT_ID)
);

DROP TABLE IF EXISTS :schema.APP_HEALTH_EVOLUTION CASCADE;
CREATE TABLE :schema.APP_HEALTH_EVOLUTION
(
    SNAPSHOT_ID INT,
    PREVIOUS_SNAPSHOT_ID INT,
    BUSINESS_CRITERION_NAME TEXT,
    IS_HEALTH_FACTOR BOOLEAN,
    NB_CRITICAL_VIOLATIONS_ADDED INT,
    NB_CRITICAL_VIOLATIONS_REMOVED INT,
    NB_VIOLATIONS_ADDED INT,
    NB_VIOLATIONS_REMOVED INT,
    CONSTRAINT APP_HEALTH_EVOLUTION_PKEY PRIMARY KEY (SNAPSHOT_ID, BUSINESS_CRITERION_NAME),
    FOREIGN KEY (SNAPSHOT_ID) REFERENCES :schema.DIM_SNAPSHOTS(SNAPSHOT_ID),
    FOREIGN KEY (PREVIOUS_SNAPSHOT_ID) REFERENCES :schema.DIM_SNAPSHOTS(SNAPSHOT_ID)    
);

----------------
-- MODULES MEASURES TABLES
----------------

DROP TABLE IF EXISTS :schema.MOD_TECHNICAL_SIZING_MEASURES CASCADE;
CREATE TABLE :schema.MOD_TECHNICAL_SIZING_MEASURES
(
    SNAPSHOT_ID INT,
    MODULE_NAME TEXT,
    TECHNOLOGY TEXT,
    NB_ARTIFACTS INT,
    NB_CODE_LINES INT,
    NB_COMMENT_LINES INT,
    NB_COMMENTED_OUT_CODE_LINES INT,
    NB_DECISION_POINTS INT,
    NB_FILES INT,
    NB_TABLES INT,
    CONSTRAINT MOD_TECHNICAL_SIZING_MEASURES_PKEY PRIMARY KEY (SNAPSHOT_ID, MODULE_NAME, TECHNOLOGY),
    FOREIGN KEY (SNAPSHOT_ID) REFERENCES :schema.DIM_SNAPSHOTS(SNAPSHOT_ID)
);

DROP TABLE IF EXISTS :schema.MOD_TECHNICAL_DEBT_MEASURES CASCADE;
CREATE TABLE :schema.MOD_TECHNICAL_DEBT_MEASURES
(
    SNAPSHOT_ID INT,
    MODULE_NAME TEXT,
    TECHNICAL_DEBT_DENSITY DOUBLE PRECISION,
    TECHNICAL_DEBT_TOTAL DOUBLE PRECISION,
    CONSTRAINT MOD_TECHNICAL_DEBT_MEASURES_PKEY PRIMARY KEY (SNAPSHOT_ID, MODULE_NAME),
    FOREIGN KEY (SNAPSHOT_ID) REFERENCES :schema.DIM_SNAPSHOTS(SNAPSHOT_ID)
);

DROP TABLE IF EXISTS :schema.MOD_HEALTH_MEASURES CASCADE;
CREATE TABLE :schema.MOD_HEALTH_MEASURES
(
    SNAPSHOT_ID INT,
    MODULE_NAME TEXT,    
    BUSINESS_CRITERION_NAME TEXT,
    IS_HEALTH_FACTOR BOOLEAN,
    NB_CRITICAL_VIOLATIONS INT,
    NB_VIOLATIONS INT,
    SCORE DOUBLE PRECISION,
    CONSTRAINT MOD_HEALTH_MEASURES_PKEY PRIMARY KEY (SNAPSHOT_ID, MODULE_NAME, BUSINESS_CRITERION_NAME),
    FOREIGN KEY (SNAPSHOT_ID) REFERENCES :schema.DIM_SNAPSHOTS(SNAPSHOT_ID)        
);

DROP TABLE IF EXISTS :schema.MOD_VIOLATIONS_MEASURES CASCADE;
CREATE TABLE :schema.MOD_VIOLATIONS_MEASURES
(
    SNAPSHOT_ID INT,
    MODULE_NAME TEXT,
    RULE_ID TEXT,
    TECHNOLOGY TEXT,        
    METRIC_ID INT,
    NB_VIOLATIONS INT,
    NB_TOTAL_CHECKS INT,
    VIOLATION_RATIO DOUBLE PRECISION,
    COMPLIANCE_RATIO DOUBLE PRECISION,
    CONSTRAINT MOD_VIOLATIONS_MEASURE_PKEY PRIMARY KEY (SNAPSHOT_ID, MODULE_NAME, RULE_ID, TECHNOLOGY),
    FOREIGN KEY (RULE_ID) REFERENCES :schema.DIM_RULES (RULE_ID),
    FOREIGN KEY (SNAPSHOT_ID) REFERENCES :schema.DIM_SNAPSHOTS(SNAPSHOT_ID),
    FOREIGN KEY (METRIC_ID) REFERENCES :schema.DIM_QUALITY_STANDARDS(METRIC_ID)
);

-----
-- MODULES EVOLUTIONS TABLES
-----

DROP TABLE IF EXISTS :schema.MOD_TECHNICAL_DEBT_EVOLUTION CASCADE;
CREATE TABLE :schema.MOD_TECHNICAL_DEBT_EVOLUTION
(
    SNAPSHOT_ID INT,
    PREVIOUS_SNAPSHOT_ID INT,
    MODULE_NAME TEXT,
    TECHNICAL_DEBT_ADDED DOUBLE PRECISION,
    TECHNICAL_DEBT_DELETED DOUBLE PRECISION,
    CONSTRAINT MOD_TECHNICAL_DEBT_EVOLUTION_PKEY PRIMARY KEY (SNAPSHOT_ID, MODULE_NAME),
    FOREIGN KEY (SNAPSHOT_ID) REFERENCES :schema.DIM_SNAPSHOTS(SNAPSHOT_ID),
    FOREIGN KEY (PREVIOUS_SNAPSHOT_ID) REFERENCES :schema.DIM_SNAPSHOTS(SNAPSHOT_ID)
);

DROP TABLE IF EXISTS :schema.MOD_HEALTH_EVOLUTION CASCADE;
CREATE TABLE :schema.MOD_HEALTH_EVOLUTION
(
    SNAPSHOT_ID INT,
    PREVIOUS_SNAPSHOT_ID INT,
    MODULE_NAME TEXT,    
    BUSINESS_CRITERION_NAME TEXT,
    IS_HEALTH_FACTOR BOOLEAN,
    TECHNOLOGY TEXT,
    NB_CRITICAL_VIOLATIONS_ADDED INT,
    NB_CRITICAL_VIOLATIONS_REMOVED INT,
    NB_VIOLATIONS_ADDED INT,
    NB_VIOLATIONS_REMOVED INT,
    CONSTRAINT MOD_HEALTH_EVOLUTION_PKEY PRIMARY KEY (SNAPSHOT_ID, MODULE_NAME, BUSINESS_CRITERION_NAME),
    FOREIGN KEY (SNAPSHOT_ID) REFERENCES :schema.DIM_SNAPSHOTS(SNAPSHOT_ID),
    FOREIGN KEY (PREVIOUS_SNAPSHOT_ID) REFERENCES :schema.DIM_SNAPSHOTS(SNAPSHOT_ID)        
);